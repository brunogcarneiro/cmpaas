{
  "_args": [
    [
      {
        "raw": "django",
        "scope": null,
        "escapedName": "django",
        "name": "django",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\Bruno\\TCC\\cmpaas-master"
    ]
  ],
  "_from": "django@latest",
  "_id": "django@0.5.1",
  "_inCache": true,
  "_location": "/django",
  "_nodeVersion": "0.10.35",
  "_npmUser": {
    "name": "yinyongcom666",
    "email": "yanni4night@gmail.com"
  },
  "_npmVersion": "2.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "django",
    "scope": null,
    "escapedName": "django",
    "name": "django",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/django/-/django-0.5.1.tgz",
  "_shasum": "af5ed8607253a47e5dbf398eeec59dc29ce0bd66",
  "_shrinkwrap": null,
  "_spec": "django",
  "_where": "C:\\Users\\Bruno\\TCC\\cmpaas-master",
  "author": {
    "name": "yanni4night@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/yanni4night/django/issues"
  },
  "dependencies": {
    "async": "~0.9.0",
    "chalk": "~1.0.0",
    "extend": "~2.0.0"
  },
  "description": "A wrapper of Django's template engine for Express.js",
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-contrib-jshint": "~0.11.0",
    "grunt-contrib-nodeunit": "~0.4.1",
    "grunt-coveralls": "~1.0.0",
    "load-grunt-tasks": "~3.1.0",
    "time-grunt": "~1.1.0"
  },
  "directories": {},
  "dist": {
    "shasum": "af5ed8607253a47e5dbf398eeec59dc29ce0bd66",
    "tarball": "https://registry.npmjs.org/django/-/django-0.5.1.tgz"
  },
  "gitHead": "9cdf476404f5f5570a51f9b6c1f4af5515782236",
  "homepage": "https://github.com/yanni4night/django",
  "keywords": [
    "django",
    "swig",
    "twig",
    "jinja",
    "template",
    "express"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "yinyongcom666",
      "email": "yanni4night@gmail.com"
    }
  ],
  "name": "django",
  "optionalDependencies": {},
  "readme": "##django\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Build status][appveyor-image]][appveyor-url] [![Dependency Status][david-dm-image]][david-dm-url] [![Dev Dependency Status][david-dm-dev-image]][david-dm-url] [![Build Status][codeship-image]][codeship-url] [![Coverage Status][coveralls-image]][coveralls-url] [![Build with Grunt][grunt-image]][grunt-url]\n\nA wrapper of [Django][django-url]'s template engine for _[Express.js][express-url]_.It's designed only for development on web front-end side.**DO NOT** use it for production.\n\n\n[Django][django-url]'s template syntax is quite different from [twig](http://twig.sensiolabs.org/),[jinja2](http://jinja.pocoo.org/) or [swig](http://paularmstrong.github.io/swig/).For now,there is no replacement like _django.js_ can simulate the syntax and the interfaces.But we can make [Django][django-url] itself working with _[node.js](http://nodejs.org/)_,even _[Express.js][express-url]_.So a wrapper is required.\n\nI setup a node-python bridge through standard in/out stream.It can handle with any size of mock data or source template file theoretically.The shell script below shows how it works:\n\n    \n    #echo '{\"name\":\"django\"}' | python django.py ./templates index.html\n\n##install\n\nFirst you have to install [Django][django-url] framework, _[pip][pip-url]_ or _[easy\\_install][easyinstall-url]_ is recommended:\n\n    \n    # pip install -v Django==1.7\n    //or\n    # easy_install \"Django==1.7\"\n\n\nMake sure it's installed successfully.\n\nSet django as a template engine for _[Express.js][express-url]_:\n\n    \n    var express = require('express');\n    var path = require('path');\n    var django = require('django');\n    \n    django.configure({\n        template_dirs: path.join(__dirname, 'template')\n    });\n\n    var app = express();\n\n    app.engine('html', django.renderFile);\n    app.set('views', path.join(__dirname, 'template'));\n    app.set('view engine', 'html');\n\n##API\n\n######1.configure(configurations)\n - param **configurations**: \\[Object\\]\\[Required\\] the configurations object\n - since _0.1.0_\n - return **this**\n\nSet the configurations.It should be called at first.\n\n######2.renderFile(tpl, data, callback)\n - param **tpl**: \\[String\\]\\[Required\\] template file name\n - param **data**: \\[Object\\]\\[Optional\\] plain object to render a template\n - param **callback**: \\[Function\\]\\[Required\\] render callback function\n - since _0.1.0_\n - return **undefined**\n\nRender a template file with data.\n\n######3.render(source, data, callback)\n - param **source**: \\[String\\]\\[Required\\] template source codes\n - param **data**: \\[Object\\]\\[Optional\\] plain object to render a template\n - param **callback**: \\[Function\\]\\[Required\\] render callback function\n - since _0.4.0_\n - return **undefined**\n\nRender a block of source codes with data.\n\n##configurations\nAll the following configurations should be set by _configure_ function.\n\n######1.template_dirs\n - Type: \\[String\\]\n - Default: 'templates'\n\nThe root directory of the template files,this is necessary when templates _[extend](https://docs.djangoproject.com/en/1.7/ref/templates/builtins/#extends)_ or _[include](https://docs.djangoproject.com/en/1.7/ref/templates/builtins/#include)_.It could be an array in the future.\n\n##notice\n\n - only **utf8** encoding is supported\n\n##author\n - <yanni4night@gmail.com>\n\n##licence\n MIT\n\n[pip-url]:https://pypi.python.org/pypi/pip\n[easyinstall-url]:https://pythonhosted.org/setuptools/easy_install.html\n\n[django-url]:https://djangoproject.com/\n[express-url]:http://expressjs.jser.us/\n\n[downloads-image]: http://img.shields.io/npm/dm/django.svg\n[npm-url]: https://npmjs.org/package/django\n[npm-image]: http://img.shields.io/npm/v/django.svg\n\n[travis-url]: https://travis-ci.org/yanni4night/django\n[travis-image]: http://img.shields.io/travis/yanni4night/django.svg\n\n[appveyor-image]:https://ci.appveyor.com/api/projects/status/bsu9w9ar8pboc2nj?svg=true\n[appveyor-url]:https://ci.appveyor.com/project/yanni4night/django\n\n[grunt-url]:http://gruntjs.com/\n[grunt-image]: http://img.shields.io/badge/BUILT%20WITH-GRUNT-yellow.svg\n\n[david-dm-url]:https://david-dm.org/yanni4night/django\n[david-dm-image]:https://david-dm.org/yanni4night/django.svg\n[david-dm-dev-image]:https://david-dm.org/yanni4night/django/dev-status.svg\n\n[codeship-image]:https://codeship.com/projects/79da7240-5481-0132-ea32-42ab35009c21/status\n[codeship-url]:https://codeship.com/projects/49203\n\n[coveralls-image]:https://coveralls.io/repos/yanni4night/django/badge.png\n[coveralls-url]:https://coveralls.io/r/yanni4night/django",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yanni4night/django.git"
  },
  "scripts": {
    "coveralls": "istanbul cover -- grunt test && grunt coveralls",
    "test": "grunt test"
  },
  "version": "0.5.1"
}
